// models/ApprovalRequest.js
const mongoose = require('mongoose');
const CommentSchema = require('./Comment'); // Import the reusable Comment Schema

const ApprovalRequestSchema = new mongoose.Schema({
  // _id is automatically generated by MongoDB
  title: {
    type: String,
    required: true,
    trim: true
  },
  details: {
    type: String,
    required: true,
    trim: true
  },
  status: {
    type: String,
    required: true,
    enum: ["Pending", "Approved", "Rejected", "Withdrawn"],
    default: "Pending"
  },
  requestorId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  requestorName: {
    type: String,
    required: true,
    trim: true
  },
  approverId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  approverName: {
    type: String,
    required: true,
    trim: true
  },
  projectId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'StoreProject'
  },
  projectName: {
    type: String,
    trim: true
  },
  requestingDepartment: {
    type: String,
    required: true,
    enum: ["Property", "Project", "Merchandising", "HR", "Marketing", "IT", "Executive Office", "Operations"]
  },
  approvalComments: [CommentSchema], // Array of embedded CommentSchema (recursive)
  submissionDate: {
    type: Date,
    default: Date.now,
    required: true
  },
  lastUpdateDate: {
    type: Date,
    default: Date.now // Will be updated on save automatically with timestamps: true
  }
}, {
  timestamps: true // Automatically adds createdAt and updatedAt fields, lastUpdateDate maps to updatedAt
});

// Export the ApprovalRequest model
module.exports = mongoose.model('ApprovalRequest', ApprovalRequestSchema, 'approvalRequests');
